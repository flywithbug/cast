// Code generated by go-bindata.
// sources:
// template/api.h
// template/api.m
// template/api_get.h
// template/api_get.m
// template/const
// template/java_api
// template/java_model
// template/java_package
// template/model.h
// template/model.m
// DO NOT EDIT!

package cast

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateApiH = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x41\x6f\xe2\x30\x10\x85\xcf\x99\x5f\x31\x62\x2f\xb1\xb5\x0b\x77\x76\xb5\xa2\x85\xa8\x6a\x0a\xa6\x6a\xe0\x90\x4b\x23\x93\x0c\xc5\x25\xc4\x96\xed\x14\xa1\xaa\xff\xbd\x8a\x94\x40\x5b\xa5\x52\x6f\x9e\xf7\x9e\xe7\x7b\x96\xfc\x4b\x1d\x8c\xb6\x1e\xff\xc5\xe9\x54\x3a\x7f\xa7\xfc\xe8\x7c\x1a\xee\xfe\x43\xe7\x0f\x5e\xb9\x91\x56\xf2\xb7\xe1\x6e\xd0\x2f\x82\x48\xb2\xab\x24\x59\x2f\xa2\x4c\x2c\x85\x58\xcf\xe7\xd9\x75\x74\x73\x2b\x00\x26\xaa\xf2\x64\xb7\x32\x27\x8c\xd3\x85\x34\x4a\x90\x3f\x6a\xbb\x9f\x96\x8a\x2a\x8f\x61\xb7\x85\x01\x8c\x38\x87\x6e\x04\xe4\x23\xf8\x83\x61\x55\x97\xa5\xdc\x94\x84\x22\x59\x3f\xcc\x13\x72\x4e\xe9\x6a\x26\xbd\x5c\x49\xb7\x47\xce\x0e\xd2\xa8\xac\xbb\x94\x1d\x95\xdf\x2d\x74\x51\x97\xb4\x3a\x19\x1a\x87\x71\x7a\x99\x98\x3f\x19\x82\x20\x68\xa2\xe3\x33\x16\x39\x66\xa2\x65\xb0\x46\x3a\x34\x11\xab\x9f\x2c\x39\x37\xbe\xe0\x5f\xb4\x2a\x30\x7c\x64\xa1\x48\xee\x5b\x17\x79\x26\x74\xd5\x24\x10\x6b\x53\x6a\x59\x74\x0e\x63\x9f\x67\x08\x02\x57\xe7\xf9\xb7\x1b\xfb\x5e\x76\x6e\x85\x5e\xba\xfd\x6f\xec\x2b\x8c\x96\x9c\xd1\x95\xa3\xe5\xe6\x99\x72\xcf\x58\x4b\x81\x20\xd8\x4a\x55\xd6\x96\x7e\xce\xc3\xaf\x40\xc4\x38\x15\xe4\x23\x6b\xb5\xfd\x58\x87\x1a\x81\xb1\x16\xf0\x17\x60\x42\x55\xd1\xf7\x01\x22\x31\x83\xf7\x00\x00\x00\xff\xff\xa9\x3b\xab\x5e\x62\x02\x00\x00")

func templateApiHBytes() ([]byte, error) {
	return bindataRead(
		_templateApiH,
		"template/api.h",
	)
}

func templateApiH() (*asset, error) {
	bytes, err := templateApiHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/api.h", size: 610, mode: os.FileMode(420), modTime: time.Unix(1561353438, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateApiM = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x51\x5d\x6f\xda\x30\x14\x7d\x8e\x7f\xc5\x55\xf6\x12\x67\x1b\x3f\x20\x68\x12\x13\xdb\x0b\x1a\x59\xd5\xd0\x07\x84\x68\x64\x92\x4b\x71\x71\x6c\xeb\xda\x01\x21\xc4\x7f\xaf\x12\x25\xa1\x54\x54\x6a\x5e\x9c\xe3\xfb\x71\x8e\xcf\xf9\x26\x2b\x6b\xc8\x43\x38\x5b\xce\x85\x95\x29\xfa\xa3\xa1\xfd\x54\x49\xd4\xfe\xfb\x39\xb6\x82\x44\x7c\x19\xed\x42\xc6\xd8\x44\x56\x56\x61\x85\xda\x0b\x2f\x8d\x86\x3b\x13\x10\xf5\x23\x9c\xb1\x9f\x10\xe9\x5a\x29\xb1\x51\x08\x69\xf6\xf4\xf8\x2f\x43\xe7\xa4\xd1\x7f\x84\x17\x0b\xe1\xf6\x10\xf3\x4a\x58\x99\xf7\x23\xf9\x51\xfa\xdd\xdc\x94\xb5\xc2\xc5\xc9\x62\x12\xcd\x96\x57\xc4\xfd\xc9\x22\x0b\x82\xa6\x35\x19\x58\x20\x86\x3c\xed\x38\x78\x73\x55\x35\x2d\x64\x5e\x08\x9d\x4b\xae\xf4\x07\x23\x4b\x88\x9e\x79\x94\x66\x0f\x5d\x15\xe2\x3c\x35\xba\xe9\x00\xa8\xad\x32\xa2\xec\x2b\x9c\xdf\x62\x16\x04\xae\x2e\x8a\x4f\x37\xde\x7b\xd9\xa0\x0a\xbc\x70\xfb\x1f\x70\x4f\x30\x10\x3a\x6b\xb4\xc3\xff\x9b\x57\x2c\x3c\xe7\x1d\x0b\x0b\x82\xad\x90\xaa\x26\xfc\x3a\x1f\x7c\x24\x04\x98\x2d\x53\xf4\x7f\x89\x0c\xbd\x97\x83\xcd\x05\xe7\x1d\xc1\x99\xb5\x86\x56\x23\x51\xb4\x91\xfe\x82\x49\xd8\x4b\x0d\xc7\x2c\x20\xf4\x35\x69\x58\x39\x54\x5b\x68\xc3\xb2\xc6\xf9\xa4\xc3\x6d\x38\xbf\xad\xcc\x90\x0e\x48\x49\x93\xd0\x1a\xda\x7d\xe8\x91\x5c\xd2\xfe\x02\xa1\x9d\x2a\xe1\x5c\xb2\x1a\x4c\x28\x1a\xbc\x86\x21\xa8\x5b\xbf\xa1\x77\xbb\x3b\xa1\x77\xa3\x3b\xd7\x63\x76\x61\x6c\x82\xba\x64\xed\xf7\x16\x00\x00\xff\xff\x6c\x74\x07\x41\xc3\x02\x00\x00")

func templateApiMBytes() ([]byte, error) {
	return bindataRead(
		_templateApiM,
		"template/api.m",
	)
}

func templateApiM() (*asset, error) {
	bytes, err := templateApiMBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/api.m", size: 707, mode: os.FileMode(420), modTime: time.Unix(1561013752, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateApi_getH = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x41\x8f\xda\x30\x10\x85\xcf\x99\x5f\x31\xa2\x97\xd8\x6a\xe1\x4e\xab\x8a\x16\xa2\xaa\x29\x98\xaa\x81\x43\x2e\x8d\x4c\x32\x2c\x5e\x82\x6d\xd9\xce\x22\xb4\xda\xff\xbe\x8a\x94\x00\x5a\x65\xa5\xbd\x79\xde\x7b\x9e\xef\x59\xf2\x27\x75\xb2\xc6\x05\xfc\x96\xe6\x73\xe9\xc3\x1f\x15\x26\xd7\xd3\xf8\xf0\x1d\x7a\x7f\xf4\xcc\xad\x74\x92\xbf\x8c\x0f\xa3\x61\x11\x44\x56\xfc\xc8\xb2\xed\x2a\x29\xc4\x5a\x88\xed\x72\x59\xfc\x4c\x7e\xfd\x16\x00\x33\xa5\x03\xb9\xbd\x2c\x09\xd3\x7c\x25\xad\x12\x14\xce\xc6\x1d\xe7\xb5\x22\x1d\x30\xee\xb7\x30\x80\x09\xe7\xd0\x8f\x80\x7c\x02\x5f\x30\xd6\x4d\x5d\xcb\x5d\x4d\x28\xb2\xed\xbf\x65\x46\xde\x2b\xa3\x17\x32\xc8\x8d\xf4\x47\xe4\xec\x24\xad\x2a\xfa\x4b\xc5\x59\x85\xc3\xca\x54\x4d\x4d\x9b\x8b\xa5\x69\x9c\xe6\xb7\x89\x85\x8b\x25\x88\xa2\x36\x3a\xbd\x62\x91\x63\x21\x3a\x06\x6b\xa5\x53\x1b\x71\xe6\xc1\x91\xf7\xd3\x1b\xfe\xc9\xa8\x0a\xe3\xff\x2c\x16\xd9\xdf\xce\x45\x5e\x08\xa3\xdb\x04\x62\x63\x6b\x23\xab\xde\x61\xac\x32\x67\x7d\xaf\x40\x14\xf9\xa6\x2c\xdf\xdd\x39\xf4\xb6\x6b\x2f\x0c\xd2\x1f\x3f\xe3\x50\x65\x74\xe4\xad\xd1\x9e\xd6\xbb\x47\x2a\x03\x63\x1d\x05\xa2\x68\x2f\x55\xdd\x38\xfa\x38\x0f\xdf\x02\x11\xd3\x5c\x50\x48\x9c\x33\xee\xbe\x0e\xb5\x02\x63\x1d\xe0\x2b\xc0\x8c\x74\x35\xf4\x05\x12\xb1\x80\xd7\x00\x00\x00\xff\xff\x6d\xaa\xe2\x50\x64\x02\x00\x00")

func templateApi_getHBytes() ([]byte, error) {
	return bindataRead(
		_templateApi_getH,
		"template/api_get.h",
	)
}

func templateApi_getH() (*asset, error) {
	bytes, err := templateApi_getHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/api_get.h", size: 612, mode: os.FileMode(420), modTime: time.Unix(1561367184, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateApi_getM = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x51\x4d\x8f\xda\x30\x10\x3d\xc7\xbf\x62\x94\x5e\xe2\xb4\xe5\x07\x04\x55\xa2\xa2\xbd\xa0\x92\x56\x0d\x7b\x40\x88\x8d\x4c\x32\x80\x17\xc7\xb6\xc6\x0e\x08\x21\xfe\xfb\x2a\x51\x12\x10\x62\xa5\xcd\x65\x32\x9f\xef\xf9\xbd\x2f\xb2\xb2\x86\x3c\x84\xb3\xe5\x5c\x58\x99\xa2\x3f\x19\x3a\x4c\x95\x44\xed\xbf\x5e\x62\x2b\x48\xc4\xd7\xd1\x3e\x64\x8c\x4d\x64\x65\x15\x56\xa8\xbd\xf0\xd2\x68\x78\xb2\x01\x51\xbf\xc2\x19\xfb\x0e\x91\xae\x95\x12\x1b\x85\x90\x66\x2f\xff\xff\x64\xe8\x9c\x34\xfa\x97\xf0\x62\x21\xdc\x01\x62\x5e\x09\x2b\xf3\x7e\x25\x3f\x49\xbf\x9f\x9b\xb2\x56\xb8\x38\x5b\x4c\xa2\xd9\xf2\x96\x71\x7f\xb6\xc8\x82\xa0\x19\x4d\x06\x14\x88\x21\x4f\x3b\x0c\xde\x94\xaa\x66\x84\xcc\x8e\xd0\xb9\xe4\x06\x7f\x34\xb2\x84\xe8\x95\x47\x69\xf6\xaf\xeb\x42\x9c\xa7\x46\x37\x13\x00\xb5\x55\x46\x94\x7d\x87\xf3\xd2\x9c\xf4\x7d\x85\x05\x81\xab\x8b\xe2\xc3\x9b\xcf\xde\x36\xf0\x02\x2f\xdc\xe1\x1b\x3c\xa3\x0c\x84\xce\x1a\xed\xf0\xef\xe6\x0d\x0b\xcf\x79\x87\xc2\x82\x60\x2b\xa4\xaa\x09\x3f\x8f\x07\x8f\x80\x00\xb3\x65\x8a\xfe\x37\x91\xa1\x7b\x3a\xd8\x14\x38\xef\x00\x2e\xac\x95\xb4\x1a\x89\xa2\x35\xf5\x07\x4c\xc2\x9e\x6a\x38\x66\x01\xa1\xaf\x49\xc3\xca\xa1\xda\x42\x6b\xd7\x0e\x7d\xd2\xa5\xad\x3b\x3f\xad\xcc\x90\x8e\x48\x49\x63\xd1\x1a\xda\x73\xe8\x91\x5c\xd2\xfe\x02\xa1\x9d\x2a\xe1\x5c\xb2\x1a\x34\x28\x9a\x7c\x0d\x83\x53\x8f\x82\x43\x2f\x77\x17\xa1\x97\xa3\x8b\xeb\x31\xbb\x32\x36\x41\x5d\xb2\xf6\x7b\x0f\x00\x00\xff\xff\x9c\x9c\xe9\x0b\xc6\x02\x00\x00")

func templateApi_getMBytes() ([]byte, error) {
	return bindataRead(
		_templateApi_getM,
		"template/api_get.m",
	)
}

func templateApi_getM() (*asset, error) {
	bytes, err := templateApi_getMBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/api_get.m", size: 710, mode: os.FileMode(420), modTime: time.Unix(1561367328, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateConst = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xf2\x8a\x0c\x4a\x2d\x2e\xc8\xcf\x2b\x4e\xf5\xcd\x4f\x49\xcd\xd1\xf1\x8a\x0c\x2c\x4d\x2d\xaa\x0c\x48\x2c\x4a\xcc\x4d\x2d\x49\x2d\xd2\xf1\x8a\xf4\x4d\x2c\xc8\xf4\x4b\x2d\x29\xcf\x2f\xca\x76\xce\xc9\x4c\xcd\x2b\x01\x04\x00\x00\xff\xff\x94\xcb\x8f\x64\x34\x00\x00\x00")

func templateConstBytes() ([]byte, error) {
	return bindataRead(
		_templateConst,
		"template/const",
	)
}

func templateConst() (*asset, error) {
	bytes, err := templateConstBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/const", size: 52, mode: os.FileMode(420), modTime: time.Unix(1561012612, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateJava_api = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\x4d\x4e\xc3\x30\x10\x85\xf7\x3e\xc5\xa8\xab\xc4\x0b\x7a\x00\x7e\x94\x10\x2a\xb1\x00\x21\xc1\x09\x06\x7b\xd4\x5a\x58\x8e\x3b\x63\x23\xd4\xa8\x77\x47\x8e\x6a\x53\xbc\xf3\xcc\x9b\xef\xbd\xb7\xe8\x88\x8c\xfa\xac\xd4\x56\x6b\xd5\x7e\xa0\xb7\x6a\x78\xc2\x84\x6a\x18\x8d\x21\x91\x99\xa5\x33\x07\x74\x01\xee\x21\x71\xa6\x5e\x0d\xbb\x63\x46\x2f\x63\xb0\xcf\x28\x87\x69\xb6\xd4\x19\xf4\xfe\x23\x47\xe2\x26\x8a\xf9\xd3\x3b\x03\xc6\xa3\x08\x54\x3a\xd0\x4f\xa2\x60\x05\x76\x8f\xee\x8b\x5e\xb3\xa4\x97\x79\xef\xc2\x18\xdd\x3b\x1d\x33\x49\xba\xab\xca\x07\x58\xfe\x32\x29\x00\x80\x0b\xb0\x0e\xbb\x1e\x96\x75\x5e\x9e\x14\xeb\x6e\x53\x77\x9b\xfe\x76\x5d\x5d\x2e\x87\xb7\x6f\x62\x76\x96\xae\x39\x53\x09\x76\x65\xb7\xa7\x54\x5a\x4f\x1e\x4f\xa7\x7f\x6c\xa6\x94\x39\x34\xdf\x9b\xb5\x51\xe3\x9f\x7f\x03\x00\x00\xff\xff\xaf\xc8\xa0\xdd\x47\x01\x00\x00")

func templateJava_apiBytes() ([]byte, error) {
	return bindataRead(
		_templateJava_api,
		"template/java_api",
	)
}

func templateJava_api() (*asset, error) {
	bytes, err := templateJava_apiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/java_api", size: 327, mode: os.FileMode(420), modTime: time.Unix(1561428592, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateJava_model = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xce\x41\x0a\xc2\x40\x0c\x85\xe1\xfd\x9c\x62\x96\xb5\x77\x10\xa6\xa8\xa0\xae\x04\xf1\x00\x31\x0d\x76\x30\x24\x63\x32\x83\x8b\xd2\xbb\x0b\x82\x76\xfb\x78\xfc\x7c\x73\x5f\xc0\xa0\x5f\x42\x48\x7b\xa8\x10\xd2\x80\x48\xee\x6a\xde\xe1\x04\x59\xe2\x36\x56\x6b\xb4\x09\xe9\xf0\x6a\xc0\x3e\xc8\x78\x04\x9f\x76\x3a\x52\x87\xc0\x7c\x6d\x85\x6c\x3d\x9d\x5d\xe5\xf4\x10\x35\xba\x98\x16\xb2\x9a\xc9\xbb\xfc\x1d\x6e\xf2\x14\x7d\xaf\xc1\xd2\xee\x9c\x31\x22\x83\x7b\xfc\x31\xe2\x1c\xfe\xa2\xe5\x13\x00\x00\xff\xff\x6f\x94\x0d\x2b\x9c\x00\x00\x00")

func templateJava_modelBytes() ([]byte, error) {
	return bindataRead(
		_templateJava_model,
		"template/java_model",
	)
}

func templateJava_model() (*asset, error) {
	bytes, err := templateJava_modelBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/java_model", size: 156, mode: os.FileMode(420), modTime: time.Unix(1561376074, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateJava_package = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xce\xcf\xd5\x4b\x4d\xca\xcc\x4e\xd5\x4b\x4f\xcd\x4b\xce\x4f\x01\xd3\x80\x00\x00\x00\xff\xff\xcb\x75\xe3\xba\x15\x00\x00\x00")

func templateJava_packageBytes() ([]byte, error) {
	return bindataRead(
		_templateJava_package,
		"template/java_package",
	)
}

func templateJava_package() (*asset, error) {
	bytes, err := templateJava_packageBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/java_package", size: 21, mode: os.FileMode(420), modTime: time.Unix(1561372222, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateModelH = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x2d\xc8\x2f\x2a\x51\xb0\xf1\x8a\x74\x4e\x2c\x2e\xf1\xce\x2c\xd1\x87\xb3\xf4\x32\xec\xb8\xb8\xaa\xb5\x0a\x12\x8b\x12\xb5\x6a\xb9\xb8\xfc\x82\xe3\x1d\x83\x83\x43\x7d\x5d\xe3\xfd\xfc\xfd\xfc\x42\x7d\x7c\xe2\x9d\x5c\xdd\x3d\xfd\xb8\xb8\x1c\x32\xf3\x4a\x52\x8b\xd2\x12\x93\x53\x15\x60\xaa\xad\xe0\xda\xe0\x0c\x87\xd4\xbc\x14\x6c\x86\xb8\xfa\xb9\x70\x71\x71\x71\x01\x02\x00\x00\xff\xff\xb0\x4c\x13\xa4\x89\x00\x00\x00")

func templateModelHBytes() ([]byte, error) {
	return bindataRead(
		_templateModelH,
		"template/model.h",
	)
}

func templateModelH() (*asset, error) {
	bytes, err := templateModelHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/model.h", size: 137, mode: os.FileMode(420), modTime: time.Unix(1561006625, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateModelM = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcd\x4d\x0a\xc2\x40\x0c\xc5\xf1\x75\x73\x8a\x50\x37\x5a\xa1\x3d\x80\x9b\x42\x05\x77\x22\x78\x82\xd8\x06\x3a\x30\x93\x0c\x69\x2a\x94\xd2\xbb\x8b\xf8\xb1\x7b\xbc\xdf\xe2\xbf\x0b\x29\xab\x39\x96\x6b\x95\xc9\xa8\xda\xea\xb1\x04\x68\x43\xca\x91\x13\x8b\x93\x07\x15\xfc\x21\xc0\x11\xf7\xd7\xfb\x39\xf4\xef\x9b\x6c\xc1\xea\x90\x74\xe0\xd8\xa9\x38\x05\x61\xbb\x99\x66\x36\x5f\x2e\x2c\x6c\xa1\xef\x22\x4d\x13\xae\x50\x34\x0d\x3e\x29\xce\x8c\xd3\xa8\x73\x1c\xf0\xc1\xf8\x31\xb5\xef\x10\x4a\x5c\x43\x61\xec\xb3\x09\xb6\xeb\xbf\x59\x6c\x27\xd8\x00\x5a\x96\xe1\x15\x00\x00\xff\xff\x51\x9f\x74\x49\xae\x00\x00\x00")

func templateModelMBytes() ([]byte, error) {
	return bindataRead(
		_templateModelM,
		"template/model.m",
	)
}

func templateModelM() (*asset, error) {
	bytes, err := templateModelMBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/model.m", size: 174, mode: os.FileMode(420), modTime: time.Unix(1561009961, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/api.h": templateApiH,
	"template/api.m": templateApiM,
	"template/api_get.h": templateApi_getH,
	"template/api_get.m": templateApi_getM,
	"template/const": templateConst,
	"template/java_api": templateJava_api,
	"template/java_model": templateJava_model,
	"template/java_package": templateJava_package,
	"template/model.h": templateModelH,
	"template/model.m": templateModelM,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"api.h": &bintree{templateApiH, map[string]*bintree{}},
		"api.m": &bintree{templateApiM, map[string]*bintree{}},
		"api_get.h": &bintree{templateApi_getH, map[string]*bintree{}},
		"api_get.m": &bintree{templateApi_getM, map[string]*bintree{}},
		"const": &bintree{templateConst, map[string]*bintree{}},
		"java_api": &bintree{templateJava_api, map[string]*bintree{}},
		"java_model": &bintree{templateJava_model, map[string]*bintree{}},
		"java_package": &bintree{templateJava_package, map[string]*bintree{}},
		"model.h": &bintree{templateModelH, map[string]*bintree{}},
		"model.m": &bintree{templateModelM, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

